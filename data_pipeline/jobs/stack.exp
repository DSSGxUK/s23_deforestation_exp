#!/bin/bash
CONFIG_FILE="config.yml"
JOB_NAME="$1" # The specific job name passed as an argument (e.g., stack_xtest)

if [ -z "$JOB_NAME" ]; then
    echo "You must provide a job name as an argument."
    exit 1
fi

# Extract values from the config using the provided job name
MODE=$(yq eval ".jobs.$JOB_NAME.MODE" $CONFIG_FILE)

# SLURM directives
#SBATCH --job-name=$(yq eval ".jobs.$JOB_NAME.JOB_NAME" $CONFIG_FILE)
#SBATCH --nodes=$(yq eval '.SLURM.DEFAULT.NODES' $CONFIG_FILE)
#SBATCH --ntasks=$(yq eval '.SLURM.DEFAULT.NTASKS' $CONFIG_FILE)
#SBATCH --cpus-per-task=$(yq eval '.SLURM.DEFAULT.CPUS_PER_TASK' $CONFIG_FILE)
#SBATCH --time=$(yq eval '.SLURM.DEFAULT.RUN_TIME' $CONFIG_FILE)
#SBATCH --mem-per-cpu=$(yq eval '.SLURM.DEFAULT.MEM_PER_CPU' $CONFIG_FILE)

TARGET_VARIABLE=$(yq eval '.GLOBAL.TARGET_VARIABLE' $CONFIG_FILE)

# Paths and parameters
WORK_DIR=$(yq eval '.SLURM.WORK_DIR' $CONFIG_FILE)
DATA_DIR=$(yq eval '.SLURM.DATA_DIR' $CONFIG_FILE)
PYTHON_ENV=$(yq eval '.SLURM.PYTHON_ENV' $CONFIG_FILE)
YEARS=($(yq eval ".jobs.$JOB_NAME.YEARS[]" $CONFIG_FILE))

DYNAMIC_CATEGORIES=($(find $WORK_DIR/$DATA_DIR/Dynamic -maxdepth 1 -mindepth 1 -type d | xargs -n 1 basename | grep -v "$TARGET_VARIABLE"))
STATIC_CATEGORIES=($(find $WORK_DIR/$DATA_DIR/Static -maxdepth 1 -mindepth 1 -type d | xargs -n 1 basename | grep -v "$TARGET_VARIABLE"))

FILES=()
if [ "$MODE" == "EXCLUDE_TARGET" ]; then
    # Assuming you have predefined DYNAMIC_CATEGORIES and STATIC_CATEGORIES arrays somewhere in your script
    for category in "${DYNAMIC_CATEGORIES[@]}"; do
        if [ "$category" != "$TARGET_VARIABLE" ]; then
            for year in "${YEARS[@]}"; do
                FILES+=("Dynamic/$category/$year/cut.tif")
            done
        fi
    done
    for category in "${STATIC_CATEGORIES[@]}"; do
        if [ "$category" != "$TARGET_VARIABLE" ]; then
            FILES+=("Static/$category/cut.tif")
        fi
    done
elif [ "$MODE" == "TARGET_ONLY" ]; then
    for year in "${YEARS[@]}"; do
        FILES+=("Dynamic/$TARGET_VARIABLE/$year/cut.tif")
    done
fi

OUTPUT_VRT=$(yq eval ".jobs.$JOB_NAME.OUTPUT_VRT" $CONFIG_FILE)
OUTPUT_GEOTIFF=$(yq eval ".jobs.$JOB_NAME.OUTPUT_GEOTIFF" $CONFIG_FILE)
RESOLUTION=$(yq eval '.GLOBAL.RESOLUTION' $CONFIG_FILE)

# Modules to load
MODULES=($(yq eval '.SLURM.MODULES[]' $CONFIG_FILE))

# Set the working directory 
cd $WORK_DIR

# Activate Python Environment
source $PYTHON_ENV

# Purge all loaded modules
module purge

# Load necessary modules
for module in "${MODULES[@]}"; do
    module load $module
done

# Print start date and time
echo "Job started on `hostname` at `date`"

# Build a VRT file
gdalbuildvrt -separate $OUTPUT_VRT "${FILES[@]/#/$DATA_DIR/}" -tr $RESOLUTION

# Convert the VRT to a GeoTIFF
gdal_translate -ot float32 -of GTiff -co "BIGTIFF=YES" $OUTPUT_VRT $OUTPUT_GEOTIFF

# Print end date and time
echo "Job ended on `hostname` at `date`"
